name: manage-azure-policy

on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request: 

env: 
  MANAGEMENT_GROUP: HMCTS

jobs:
  apply-azure-policy-sandbox:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
          client-id: b430ef1e-4e79-4e92-a152-8e5b5bc195d4 # DTS CFT AKS version checker
          tenant-id: 531ff96d-0ae9-462a-8d2d-bec7c0b42082 # HMCTS.NET
          allow-no-subscriptions: true
    - name: create sandbox files
      run: |
        ./pipeline-scripts/sandbox-override.sh
      env:
        ENVIRONMENT: "Sandbox"
        SUB: "/subscriptions/b72ab7b7-723f-4b18-b6f6-03b0f2c6a1bb"

    - name: Sandbox - test creating and updating Azure Policies
      uses: azure/manage-azure-policy@v0
      with:
        mode: complete
        paths: |
          Sandbox/**

    - name: Sandbox - Force compliance check
      uses: azure/policy-compliance-scan@v0
      with:
        wait: false
        scopes: |
          /subscriptions/b72ab7b7-723f-4b18-b6f6-03b0f2c6a1bb

  apply-azure-policy-subscription:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        allow-no-subscriptions: true

    - name: Live - Create or Update Azure Policies
      uses: azure/manage-azure-policy@v0
      with:
        mode: complete
        paths: |
          policies/**
          assignments/subscriptions/**

  apply-azure-policy-mgmt-group:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        allow-no-subscriptions: true
    
    - name: Live - Create or Update Azure Policies
      uses: azure/manage-azure-policy@v0
      with:
        mode: complete
        paths: |
          policies/**
          assignments/mgmt-groups/**
      env:
        MANAGEMENT_GROUP: ${{env.MANAGEMENT_GROUP}}

    - name: Get list of subscriptions under management group
      id: get_subscriptions
      env:
        MANAGEMENT_GROUP: ${{env.MANAGEMENT_GROUP}}
      run: |
        set -e
        echo 'subs<<EOF' >> $GITHUB_OUTPUT
        az account management-group show --name ${MANAGEMENT_GROUP} --expand -r | jq -r '.children[].children | .. | objects | select( .type == "/subscriptions") | .id' >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Live - Force compliance check 
      uses: azure/policy-compliance-scan@v0
      with:
        wait: false
        scopes: "${{ steps.get_subscriptions.outputs.subs }}"
