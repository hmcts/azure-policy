name: manage-azure-policy

on:
  push:
    branches: [master]
  pull_request: 

env: 
  MANAGEMENT_GROUP: dts002

jobs:
  apply-azure-policy-sandbox:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        allow-no-subscriptions: true

    - name: create sandbox files
      run: |
        ./pipeline-scripts/sandbox-override.sh
      env:
        ENVIRONMENT: "Sandbox"
        SUB: "/subscriptions/b72ab7b7-723f-4b18-b6f6-03b0f2c6a1bb"

    - name: Sandbox - test creating and updating Azure Policies
      uses: azure/manage-azure-policy@v0
      with:
        mode: complete
        paths: |
          Sandbox/**

    - name: Sandbox - Force compliance check
      uses: azure/policy-compliance-scan@v0
      with:
        wait: false
        scopes: |
          /subscriptions/b72ab7b7-723f-4b18-b6f6-03b0f2c6a1bb
  
  apply-azure-policy-live:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        allow-no-subscriptions: true
    
    - name: Live - Create or Update Azure Policies
      uses: azure/manage-azure-policy@v0
      with:
        mode: complete
        paths: |
          policies/**
          assignments/**

    - name: Get list of subscriptions under management group
      id: get_subscriptions
      env:
        MANAGEMENT_GROUP: ${{env.MANAGEMENT_GROUP}}
      run: |
        subs=$(az account management-group show --name $MANAGEMENT_GROUP --expand --query "children [?type=='/subscriptions'].id" -o tsv)
        subs="${subs//$'\n'/'%0A'}"
        echo ::set-output name=subs::"$subs"
    
    - name: Live - Force compliance check 
      uses: azure/policy-compliance-scan@v0
      with:
        wait: false
        scopes: "${{ steps.get_subscriptions.outputs.subs }}"
